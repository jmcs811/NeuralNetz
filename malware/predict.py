from fastai.vision import Learner, load_learner, open_image, torch
import sys
import os
import array
import numpy
from PIL import Image

def bin_to_img(file_path):
    f = open(file_path, 'rb')
    length = os.path.getsize(file_path)
    width = 256

    rem = length % width

    a = array.array("B")
    a.fromfile(f, length - rem)

    f.close()

    size = round(len(a)/ width)

    g = numpy.reshape(a, (size, width))

    rescaled = (255.0 / g.max() * (g - g.min())).astype(numpy.uint8)
    im = Image.fromarray(rescaled)
    new_im = im.resize((256,256))
    new_im.save('/tmp/img.png')

def predict(file_path):
    img = open_image(file_path)
    img.resize(torch.Size([img.shape[0], 224, 224]))

    learn = load_learner('./images', 'export.pkl')
    print(learn.predict(img)[0])

bin_to_img('/usr/bin/which')
predict('/tmp/img.png')